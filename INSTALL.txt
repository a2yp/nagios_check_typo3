Nagios(R) TYPO3 Monitoring
Michael <typo3@schams.net> - http://schams.net


INSTALLATION:

Install Nagios(R) as documented. We assume your Nagios(R) server runs, is
configured and tested. We also assume all Nagios(R) plugins are located in:

	/usr/local/nagios/libexec/

Copy files "check_typo3.sh" and "check_typo3.cfg" to /usr/local/nagios/libexec/

Ensure, file permissions are correct, for example (depending on your individual system):

	chown nagios /usr/local/nagios/libexec/check_typo3*
	chmod 755 /usr/local/nagios/libexec/check_typo3.sh
	chmod 644 /usr/local/nagios/libexec/check_typo3.cfg

Install and set up the TYPO3 extension ON THE TYPO3 SERVER! You will find a detailed
documentation in the extension package ("doc/manual.sxw") and online:

	http://schams.net/nagios

As the next step, integrate the "TYPO3 check" in your Nagios(R) configuration.
For example:

--- cut here ---
define command {
        command_name            check_typo3
        command_line            $USER1$/check_typo3 $ARG1$
}

define service {
        use                     generic-service
        host_name               my-typo3-host
        service_description     TYPO3
        check_command           check_typo3!--hostname my-typo3-server.org --pageid 42
        normal_check_interval   60
        retry_check_interval    10
        notifications_enabled   1
}
--- cut here ---

Please note: this is an example only. Change "my-typo3-server.org" accordingly and ensure,
parameter --pageid shows the correct page ID (here: 42). Find a full list of options below.

Reload Nagios(R) server and check if everything is working as expected.
Continue with your individual configuration as described below.


CONFIGURATION:

The configuration file "check_typo3.cfg" controls how the script "check_typo3.sh"
should react (e.g. report a critical error to the Nagios(R) core or just a warning,
etc.) when it reads and parses the data from the TYPO3 instance.

For example: it is possible to configure that Nagios(R) notifies system administrators
about a CRITICAL state, if a specific TYPO3 extension in a specific version is
installed on the TYPO3 system. This is very useful if the TYPO3 Security Team
publishes a security bulletin about a new vulnerability found in one of the
extensions.

Another scenario would be to monitor TYPO3 core versions: a Nagios(R) system with the
TYPO3 plugin can monitor a range of TYPO3 instances/servers. The OK-state shows the
current TYPO3 core version. By a small configuration change at the Nagios(R) end,
Nagios(R) warns system administrators about a specific (e.g. outdated) TYPO3 version.

Open the configuration file with your favourite text editor (e.g. "vi") and investigate
the diverse options. The file is pretty self-explaining (check the comments).

	vi /usr/local/nagios/libexec/check_typo3.cfg

If you do not want to maintain you own configuration file, you should check frequently
if a newer version of the configuration file "check_typo3.cfg" is available (and
replace the existing one):

	http://schams.net/nagios


CONFIGURATION OPTIONS:

Usage:
  check_typo3 -H <fqhostname> -pid <pageid>
              [-c <configfile>] [-e <encryptionkey>] [-t <timeout>] [-u <username>] | [-p <password>]

  check_typo3 --help
  check_typo3 --version

Informative arguments:
  -h, --help
       Print detailed help screen
  -V, --version, --revision
       Print version information

Mandatory arguments:
  -H <fqhostname>, --hostname <fqhostname>
       Full qualified host name argument of TYPO3 server (used in the GET request)
       Append a port to include it in the URL (eg: typo3.org:8080)
  -pid <pageid>, --pageid <pageid>
       Page ID (numeric value) of TYPO3 instance with TYPO3 extension "nagios"
       See argument --resource and note below
  --resource <path>
       Request path to page in TYPO3 where TYPO3 extension "nagios" is installed
       Argument --resource overwrites -pid and --pageid

  Note: request string to TYPO3 instance becomes "index.php?id=<pageid>" if argument
        -pid or --pageid is given. Alternatively, parameter --resource can be used to
        define the path to the page, instead of naming the page ID (may be useful if
        TYPO3 instance uses SEO extensions), eg: "--resource /sysfolder/nagios.html".

Optional arguments:
  -c <configfile>, --config <configfile>
       Path and filename to configuration file. Default: "check_typo3.cfg"
       Located in  in Nagios' etc-directory (eg: /usr/local/nagios/etc/check_typo3.cfg)
  -e <encryptionkey>, --encryptionkey <encryptionkey>
       First 10 characters (at least) of the encryption key defined in TYPO3
  -t <timeout>, --timeout <timeout>
       Timeout in seconds. Nagios check fails (return: CRITICAL) if timeout exceeded
       This timeout value applies to DNS lookup timeout, connect timeout and read timeout
  -u <username>, --http-user <username>
       HTTP user name (string) for HTTP access authentication (HTTP status code: 401)
  -p <password>, --http-password <password>
       HTTP password (string) for HTTP access authentication (HTTP status code: 401)

Examples:
  check_typo3 -H typo3.org -pid 42
  check_typo3 -H typo3.org -pid 42 --http-user nagios --http-password MySecretPassword
  check_typo3 --hostname mydomain.com --resource /sysfolder/nagios.html
  check_typo3 -H mydomain.com --pageid 123 --config /etc/nagios/typo3.cfg
  check_typo3 -H example.net --pageid 456 -e c50e820568ff --timeout 5

